#!/usr/bin/env ruby
require 'shellwords'

class Rush
  BUILTINS = {
    'cd' => ->(dir){ Dir.chdir(dir) },
    'exit' => ->(code = 0){ exit(code.to_i) },
    'exec' => ->(*command){ exec *command },
    'set' => ->(args){
      env_var, value = args.split('=')
      ENV[env_var] = value
    }
  }

  class << self
    def start 
      loop do
        $stdout.print 'rush> '

        stdin_placeholder = $stdin
        stdout_placeholder = $stdout
        pipe = []

        line = $stdin.gets
        commands = line.scan( /([^"'|]+)|["']([^"']*)["']/ ).flatten.compact

        commands.each_with_index do |command, i|
          command, *arguments = Shellwords.shellsplit(command)

          if cmd = BUILTINS[command]
            cmd.call(*arguments)
          else
            if i + 1 < commands.size
              pipe = IO.pipe
              stdout_placeholder = pipe.last
            else
              stdout_placeholder = $stdout
            end
          end

          fork {
            unless stdout_placeholder == $stdout
              $stdout.reopen(stdout_placeholder)
              stdout_placeholder.close
            end

            unless stdin_placeholder == $stdin
              $stdin.reopen(stdin_placeholder)
              stdin_placeholder.close
            end

            exec command, *arguments
          }

          stdout_placeholder.close unless stdout_placeholder == $stdout
          stdin_placeholder.close unless stdin_placeholder == $stdin
          stdin_placeholder = pipe.first
        end

        Process.waitall
      end
    end
  end
end

Rush.start
